cmake_minimum_required(VERSION 3.10)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

project(Ignite VERSION 1.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")

set(PROJECT_SOURCES
    src/main.cpp
    src/skia/SkiaRenderer.cpp
    src/lib/user.cpp  
    src/window/GLFWWindowManager.cpp
    src/core/logger.cpp
)

add_executable(${PROJECT_NAME} ${PROJECT_SOURCES})

include_directories(include) 
include_directories(include/core)
include_directories(include/skia)
include_directories(include/window)
include_directories(include/lib)

find_package(fmt CONFIG REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE fmt::fmt)

find_package(glfw3 CONFIG REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE glfw)

find_package(unofficial-skia CONFIG REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE unofficial::skia::skia)

find_package(OpenGL REQUIRED)
target_link_libraries(${PROJECT_NAME} PRIVATE OpenGL::GL)

include(FetchContent)

# target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -Wpedantic)

# if(MSVC)
#     target_compile_options(${PROJECT_NAME} PRIVATE /W4)
# else()
# endif()

# Optional: Create installation rules
install(TARGETS ${PROJECT_NAME} DESTINATION bin)

# Optional: Enable testing
option(BUILD_TESTS "Build the tests" OFF)
if(BUILD_TESTS)
    enable_testing()
    add_subdirectory(tests)
endif()
